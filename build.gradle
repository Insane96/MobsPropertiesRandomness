buildscript {
    repositories {
        maven {
            name = 'gradle plugins'
            url "https://plugins.gradle.org/m2/"
        }
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

version = "${mod_version}-mc${mc_version}"
group = 'insane96mcp.mobspropertiesrandomness'
archivesBaseName = 'MobsPropertiesRandomness'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: "${mc_version}"
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '-mixin.config=mobspropertiesrandomness.mixins.json'

            mods {
                mobspropertiesrandomness {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '-mixin.config=mobspropertiesrandomness.mixins.json'

            mods {
                mobspropertiesrandomness {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { // SlimeKnights and JEI
        name 'DVS1 Maven FS'
        url 'https://dvs1.progwml6.com/files/maven'
    }
    maven { url 'https://maven.blamejared.com' }
    maven {
        url = "https://jitpack.io"
    }
    flatDir {
        dirs "libs"
    }
}

mixin {
    add sourceSets.main, "mobspropertiesrandomness.refmap.json"
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    implementation fg.deobf("blank:InsaneLib:${lib_version}-mc${mc_version}")

    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"

    // Copypasted from materialis. Still no shame.
    //implementation fg.deobf("slimeknights.mantle:Mantle:${mc_version}-${mantle_version}")
    //implementation fg.deobf("slimeknights.tconstruct:TConstruct:${mc_version}-${tic_version}")

    implementation fg.deobf("net.darkhax.bookshelf:Bookshelf-Forge-${mc_version}:${bookshelf_version}")
    implementation fg.deobf("net.darkhax.gamestages:GameStages-Forge-${mc_version}:${gamestages_version}")

    implementation fg.deobf("com.github.Virtuoel:Pehkui:${pehkui_version}")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "mobspropertiesrandomness",
            "Specification-Vendor": "insane96mcp",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${mod_version}",
            "Implementation-Vendor" :"insane96mcp",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "mobspropertiesrandomness.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
